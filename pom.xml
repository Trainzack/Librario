<?xml version="1.0" encoding="UTF-8"?>

<!--  TODO Installer. IzPack? https://izpack.atlassian.net/wiki/spaces/IZPACK/pages/491628/IzPack+Maven+Plugin+Reference -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>eli.projects</groupId>
	<artifactId>librario</artifactId>
	<version>0.0.8-J11</version>
	<packaging>izpack-jar</packaging>

	<name>spprototype</name>
	<url>http://maven.apache.org</url>

	<properties>
		
		<project.javaVersion>11</project.javaVersion>
		<project.appName>Librario</project.appName>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		
		<!-- Installer variables -->
		<info.appName>${project.appname}</info.appName>
		<info.appsubpath>my-killer-app/standard</info.appsubpath>
		<izpack.dir.app>${basedir}/src/main/izpack</izpack.dir.app>
		<izpack.staging>${project.build.directory}/staging</izpack.staging>
		<izpack.staging.app>${izpack.staging}</izpack.staging.app>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.kordamp.ikonli</groupId>
			<artifactId>ikonli-javafx</artifactId>
			<version>11.5.0</version>
			<!-- J8 <version>2.6.0</version> -->
		</dependency>
		<dependency>
			<groupId>org.kordamp.ikonli</groupId>
			<artifactId>ikonli-entypo-pack</artifactId>
			<version>11.5.0</version>
			<!-- J8 <version>2.6.0</version> -->
		</dependency>
		<dependency>
			<groupId>org.apache.pdfbox</groupId>
			<artifactId>pdfbox</artifactId>
			<version>2.0.21</version>
		</dependency>
		<dependency>
			<groupId>org.apache.pdfbox</groupId>
			<artifactId>fontbox</artifactId>
			<version>2.0.21</version>
		</dependency>
		<!-- 
		<dependency>
			<groupId>org.apache.pdfbox</groupId>
			<artifactId>jempbox</artifactId>
			<version>1.8.21</version>
		</dependency>
		<dependency>
			<groupId>org.apache.pdfbox</groupId>
			<artifactId>xmpbox</artifactId>
			<version>2.0.21</version>
		</dependency>
		<dependency>
			<groupId>org.apache.pdfbox</groupId>
			<artifactId>preflight</artifactId>
			<version>2.0.21</version>
		</dependency>
		<dependency>
			<groupId>org.apache.pdfbox</groupId>
			<artifactId>pdfbox-tools</artifactId>
			<version>2.0.21</version>
		</dependency>
 -->
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-controls</artifactId>
			<version>14</version>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-fxml</artifactId>
			<version>14</version>
		</dependency>

		<dependency>
			<groupId>org.controlsfx</groupId>
			<artifactId>controlsfx</artifactId>
			<version>11.0.2</version>
			<!-- J8 <version>8.40.17</version> -->
		</dependency>
        <dependency>
            <!-- <groupId>com.airhacks</groupId> -->
            <groupId>com.dlsc.afterburner</groupId> <!--  Spinoff for java11 compatability -->
            <artifactId>afterburner.fx</artifactId>
            <version>2.0.0</version> 
            <!-- <version>1.6.0</version> -->
        </dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<!-- This plugin checks for new versions of other plugins -->
			    <groupId>org.codehaus.mojo</groupId>
			    <artifactId>versions-maven-plugin</artifactId>
			    <version>2.8.1</version>
			    <configuration>
			        <generateBackupPoms>false</generateBackupPoms>
			    </configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<mainClass>eli.projects.spprototype.Main</mainClass>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<!-- <version>3.3</version> -->
				<version>3.8.0</version>
				<configuration>
					<release>${project.javaVersion}</release>
				</configuration>
			</plugin>
			<!-- <plugin> <artifactId>maven-assembly-plugin</artifactId> <version>3.3.0</version> 
				<configuration> <archive> <manifest> <mainClass>eli.projects.spprototype.Main</mainClass> 
				</manifest> </archive> <descriptorRefs> <descriptorRef>jar-with-dependencies</descriptorRef> 
				</descriptorRefs> </configuration> <executions> <execution> <id>make-assembly</id> 
				<phase>package</phase> <goals> <goal>single</goal> </goals> </execution> 
				</executions> </plugin> -->
				
			<!--  Create shaded JAR -->
			<!-- <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.2.4</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>eli.projects.spprototype.Main</mainClass>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin> -->
			
			<!-- copy the installer descriptor and installer resources (images, text files, etc.) into the "staging" area. -->
			<plugin>
			    <artifactId>maven-antrun-plugin</artifactId>
			    <executions>
			       <execution>
			          <id>create-staging-area</id>
			          <phase>process-resources</phase>
			          <goals>
			             <goal>run</goal>
			          </goals>
			          <configuration>
			             <tasks>
			                <copy todir="${izpack.staging}">
			                   <fileset dir="${izpack.dir.app}"/>
			                </copy>
			             </tasks>
			          </configuration>
			       </execution>
			    </executions>
			 </plugin>
			
			<!-- Copy app jars to the staging area -->
			<plugin>
			  <artifactId>maven-dependency-plugin</artifactId>
			  <configuration>
			    <excludeTransitive>false</excludeTransitive>
			    <stripVersion>true</stripVersion>
			    <overWriteReleases>true</overWriteReleases>
			    <overWriteSnapshots>true</overWriteSnapshots>
			    <overWriteIfNewer>true</overWriteIfNewer>
			  </configuration>
			  <executions>
			    <execution>
			      <!-- copy *application* jars to izpack staging lib -->
			      <id>copy-product-dependencies</id>
			      <phase>prepare-package</phase>
			      <goals>
			        <goal>copy-dependencies</goal>
			      </goals>
			      <configuration>
			        <outputDirectory>${izpack.staging}/lib</outputDirectory>
			        <excludeScope>system</excludeScope>
			        <!-- this excludes tools.jar, e.g. -->
			        <excludeGroupIds>org.codehaus.izpack</excludeGroupIds>
			        <!-- TODO: Check if we need to add this line<excludeGroupIds>junit</excludeGroupIds> -->
			        <!-- IMPORTANT: we don't want to copy the IzPack dependency where our application jars live -->
			      </configuration>
			    </execution>
			    <!-- If we had custom panels, we would add them here with another execution -->
			  </executions>
			</plugin>
			
			<!-- Run IzPack -->
			<plugin>
				<groupId>org.codehaus.izpack</groupId>
				<artifactId>izpack-maven-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
					<baseDir>${izpack.staging.app}</baseDir>
					<installFile>${izpack.dir.app}/install.xml</installFile>
					<outputDirectory>${project.build.directory}</outputDirectory>
					<finalName>${project.build.finalName}</finalName>
					<enableOverrideArtifact>true</enableOverrideArtifact>
					<mkdirs>true</mkdirs>
					<autoIncludeUrl>false</autoIncludeUrl>
					<autoIncludeDevelopers>false</autoIncludeDevelopers>
				</configuration>
			</plugin>

		</plugins>

		<resources>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources/</directory>
				<includes>
					<include>**/*.properties</include>
				</includes>
			</resource>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/izpack/</directory>
				<includes>
					<include>install.xml</include>
				</includes>
			</resource>
			<resource>
				<filtering>false</filtering>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.fxml</include>
					<include>**/*.css</include>
					<include>**/*.png</include>
				</includes>
			</resource>
			<resource>
				<filtering>false</filtering>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.fxml</include>
					<include>**/*.css</include>
				</includes>
			</resource>
		</resources>
	</build>
</project>
